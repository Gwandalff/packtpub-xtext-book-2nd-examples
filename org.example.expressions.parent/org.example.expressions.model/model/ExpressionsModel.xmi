<?xml version="1.0" encoding="UTF-8"?>
<expressions:ExpressionsModel
    xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:expressions="http://www.example.org/expressions/Expressions"
    xsi:schemaLocation="http://www.example.org/expressions/Expressions Expressions.ecore">
  <statements>
    <elements
        xsi:type="expressions:ComplexFunction"
        name="factN">
      <varNames
          name="n"
          type="int"/>
      <varNames
          name="fact"
          type="int"/>
      <body>
        <statements>
          <elements
              xsi:type="expressions:Condition">
            <expression
                xsi:type="expressions:Comparison"
                op="&lt;">
              <left
                  xsi:type="expressions:VarOrParamRef"
                  variable="//@statements/@elements.0/@varNames.0"/>
              <right
                  xsi:type="expressions:IntConstant"/>
            </expression>
            <ifz>
              <statements>
                <elements
                    xsi:type="expressions:EvalExpression">
                  <expression
                      xsi:type="expressions:FunCall"
                      function="//@statements/@elements.0">
                    <params
                        xsi:type="expressions:FunParamExp">
                      <expr
                          xsi:type="expressions:Minus">
                        <left
                            xsi:type="expressions:VarOrParamRef"
                            variable="//@statements/@elements.0/@varNames.0"/>
                        <right
                            xsi:type="expressions:IntConstant"
                            value="1"/>
                      </expr>
                    </params>
                    <params
                        xsi:type="expressions:FunParamCapture"
                        variable="//@statements/@elements.0/@varNames.1"/>
                  </expression>
                </elements>
                <elements
                    xsi:type="expressions:Variable"
                    name="fact">
                  <expression
                      xsi:type="expressions:MulOrDiv"
                      op="*">
                    <left
                        xsi:type="expressions:VarOrParamRef"
                        variable="//@statements/@elements.0/@varNames.1"/>
                    <right
                        xsi:type="expressions:VarOrParamRef"
                        variable="//@statements/@elements.0/@varNames.0"/>
                  </expression>
                </elements>
              </statements>
            </ifz>
          </elements>
          <elements
              xsi:type="expressions:EvalExpression">
            <expression
                xsi:type="expressions:VarOrParamRef"
                variable="//@statements/@elements.0/@varNames.1"/>
          </elements>
        </statements>
      </body>
    </elements>
    <elements
        xsi:type="expressions:Variable"
        name="sideEffect">
      <expression
          xsi:type="expressions:IntConstant"
          value="1"/>
    </elements>
    <elements
        xsi:type="expressions:EvalExpression">
      <expression
          xsi:type="expressions:FunCall"
          function="//@statements/@elements.0">
        <params
            xsi:type="expressions:FunParamExp">
          <expr
              xsi:type="expressions:IntConstant"
              value="5"/>
        </params>
        <params
            xsi:type="expressions:FunParamCapture"
            variable="//@statements/@elements.1"/>
      </expression>
    </elements>
    <elements
        xsi:type="expressions:EvalExpression">
      <expression
          xsi:type="expressions:VarOrParamRef"
          variable="//@statements/@elements.1"/>
    </elements>
  </statements>
</expressions:ExpressionsModel>
